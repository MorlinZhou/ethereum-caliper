{
	"id": "e89478b39c88654ebc4920feed9172bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/contracts/creditOp.sol": {
				"content": "pragma solidity >=0.4.0 <0.9.0;\n\ncontract creditOp {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/contracts/creditOp.sol": {
				"creditOp": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/contracts/creditOp.sol\":33:59  contract creditOp {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/contracts/creditOp.sol\":33:59  contract creditOp {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201f0da7e92c256220cce759598f7991a08c29f5734cedc3546b8d71ccc46a7fb764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201f0da7e92c256220cce759598f7991a08c29f5734cedc3546b8d71ccc46a7fb764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD 0xA7 0xE9 0x2C 0x25 PUSH3 0x20CCE7 MSIZE MSIZE DUP16 PUSH26 0x91A08C29F5734CEDC3546B8D71CCC46A7FB764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "33:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201f0da7e92c256220cce759598f7991a08c29f5734cedc3546b8d71ccc46a7fb764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD 0xA7 0xE9 0x2C 0x25 PUSH3 0x20CCE7 MSIZE MSIZE DUP16 PUSH26 0x91A08C29F5734CEDC3546B8D71CCC46A7FB764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "33:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 59,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f0da7e92c256220cce759598f7991a08c29f5734cedc3546b8d71ccc46a7fb764736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 59,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 59,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 59,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/contracts/creditOp.sol\":\"creditOp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/contracts/creditOp.sol\":{\"keccak256\":\"0xd1041d6e1f38ba5014aaca205eae6419b6fdf59375cd640ada7060bea0939112\",\"urls\":[\"bzz-raw://77ad624b12827352733d941e53f7e080a0839a279d6bc4d445552a4a8331050b\",\"dweb:/ipfs/QmYBR1uM3gfwpXUU9Z3qrNKhhc1WuqCPkNKS6XVpCzhvCM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> .deps/contracts/creditOp.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/contracts/creditOp.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/contracts/creditOp.sol": {
				"ast": {
					"absolutePath": ".deps/contracts/creditOp.sol",
					"exportedSymbols": {
						"creditOp": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "creditOp",
							"nameLocation": "42:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:26:0",
							"usedErrors": []
						}
					],
					"src": "0:59:0"
				},
				"id": 0
			}
		}
	}
}